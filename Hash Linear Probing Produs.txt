# define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>


struct Produs
{
    unsigned char numar_magazine;
    int numarStocuri;
    float* stocuri_magazine;
    char* denumireProdus;

};

void afisareProdus(Produs* p)
{
    printf("Numar Magazine = %d, Numar Stocuri = %d, Stocuri = \n", p->numar_magazine, p->numarStocuri);
    for (int i = 0; i < p->numarStocuri; i++)
    {
        printf("Stoc %d = %f ", i + 1, p->stocuri_magazine[i]);
    }
    printf("\nDenumire Produs = %s\n", p->denumireProdus);
}



//struct nodLs
//{
//    Produs* p;
//    nodLs* next;
//};

struct hashT
{
    Produs** produse;
    int dimensiune;
};

int functieHash(int cod, hashT tabela)
{
    return cod % tabela.dimensiune;
}


int inserare(hashT tabela, Produs* p)
{
    int pozitie;
    if (tabela.produse != NULL)
    {
        pozitie = functieHash(p->numar_magazine, tabela);
        if (tabela.produse[pozitie] == NULL)
        {
            tabela.produse[pozitie] = p;
        }
        else
        {
            int index = 1;
            while (pozitie + index < tabela.dimensiune)
            {
                if (tabela.produse[pozitie + index] == NULL)
                {
                    tabela.produse[pozitie + index] = p;
                    pozitie += index;
                    break;
                }
                index++;
            }
        }
    }
    return pozitie;
}


hashT citireDinFisier(FILE* f)
{
    hashT tabela;
    tabela.dimensiune = 101;
    tabela.produse = (Produs**)malloc(tabela.dimensiune * sizeof(Produs*));
    for (int i = 0; i < tabela.dimensiune; i++)
    {
        tabela.produse[i] = NULL;
    }
    char buffer[100];
    int dimensiune = 0;
    fscanf(f, "%d", &dimensiune);
    fgets(buffer, 100, f);

    for (int i = 0; i < dimensiune; i++)
    {
        Produs* p = (Produs*)malloc(sizeof(Produs));
        fgets(buffer, 100, f);

        strtok(buffer, ",");
        p->numar_magazine = atoi(buffer);

        strcpy(buffer, strtok(NULL, ","));
        p->numarStocuri = atoi(buffer);;


        float* stocuriMagazin = (float*)malloc(sizeof(float) * p->numarStocuri);
        for (int i = 0; i < p->numarStocuri; i++)
        {
            strcpy(buffer, strtok(NULL, ","));
            stocuriMagazin[i] = atof(buffer);;
        }

        p->stocuri_magazine = stocuriMagazin;

        strcpy(buffer, strtok(NULL, ","));
        strtok(buffer, "\n");
        p->denumireProdus = (char*)malloc(sizeof(char) * (strlen(buffer) + 1));
        strcpy(p->denumireProdus, buffer);


        inserare(tabela, p);
    }

    return tabela;
}


void traversare(hashT tabela)
{
    if (tabela.produse != NULL)
    {
        printf("\n");
        for (int i = 0; i < tabela.dimensiune; i++)
        {
            if (tabela.produse[i] != NULL)
            {
                    printf("Pozitia %d \n", i);
                    afisareProdus(tabela.produse[i]);
            }
        }
    }


}

void main()
{
    FILE* f;
    f = fopen("Text.txt", "r");

    hashT tabela;
    tabela = citireDinFisier(f);

    traversare(tabela);

    fclose(f);

}