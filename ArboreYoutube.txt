#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
#include <corecrt_malloc.h>

struct Avion
{
	char* model;
	int nrLocuri;
	int nrLocuriOcupate;
	float* preturiBilete;
};

Avion initAvion(const char* model, int nrLocuri, int nrLocuriOcupate, float* preturiBilete)
{
	Avion avion;
	avion.model = (char*)malloc(sizeof(char) * (strlen(model) + 1));
	strcpy(avion.model, model);

	avion.nrLocuri = nrLocuri;
	avion.nrLocuriOcupate = nrLocuriOcupate;
	avion.preturiBilete = (float*)malloc(sizeof(float) * nrLocuriOcupate);

	for (int i = 0; i < nrLocuriOcupate; i++)
	{
		avion.preturiBilete[i] = preturiBilete[i];
	}

	return avion;
}

void afisareAvion(Avion avion)
{
	printf("Avionul %s are %d locuri, dar au fost ocupate %d: ", avion.model, avion.nrLocuri, avion.nrLocuriOcupate);
	for (int i = 0; i < avion.nrLocuriOcupate; i++)
	{
		printf("%5.2f ", avion.preturiBilete[i]);
	}
	printf("\n");
}

Avion citesteAvionDinFisier(FILE* f)
{
	Avion a;
	char buffer[20];
	fscanf(f, "%s", buffer);
	a.model = (char*)malloc(sizeof(char) * strlen(buffer) + 1);
	strcpy(a.model, buffer);

	fscanf(f, "%d", &a.nrLocuri);
	fscanf(f, "%d", &a.nrLocuriOcupate);

	a.preturiBilete = (float*)malloc(sizeof(float) * a.nrLocuriOcupate);

	for (int i = 0; i < a.nrLocuriOcupate; i++)
	{
		fscanf(f, "%f", &a.preturiBilete[i]);
	}
	return a;
}

struct NOD
{
	Avion info;
	NOD* st;
	NOD* dr;
};

NOD* inserareAvionInArbore(NOD* rad, Avion a)
{
	if (rad)
	{
		if (rad->info.nrLocuri > a.nrLocuri)
		{
			rad->st = inserareAvionInArbore(rad->st, a);
		}
		else
		{
			rad->dr = inserareAvionInArbore(rad->dr, a);
		}
		return rad;
	}
	else
	{
		NOD* nou = (NOD*)malloc(sizeof(NOD));
		nou->info = a;
		nou->dr = NULL;
		nou->st = NULL;
		return nou;
	}
}

void afisareInordine(NOD * rad)
{
	if (rad)
	{
		afisareInordine(rad->st);
		afisareAvion(rad->info);
		afisareInordine(rad->dr);
	}
}

void cautareAvionInArboreDupaNrLocuri(NOD* rad, int nrLocuri)
{
	if (rad)
	{
		if (rad->info.nrLocuri == nrLocuri)
			afisareAvion(rad->info);
		else if (rad->info.nrLocuri > nrLocuri)
			cautareAvionInArboreDupaNrLocuri(rad->st, nrLocuri);
		else
			cautareAvionInArboreDupaNrLocuri(rad->st, nrLocuri);
	}
	else
		printf("Nu s-a gasit nimic");
}

void main()
{
	//Avion avion = initAvion("A330", 300, 3, new float[] {10, 20, 30});
	//afisareAvion(avion);


	//FILE* fisier = fopen("avioane.txt", "r+");
	//int nrAvioane = 0;
	//if (fisier)
	//{
	//	fscanf(fisier, "%d", &nrAvioane);
	//	for (int i = 0; i < nrAvioane; i++)
	//	{
	//		Avion a = citesteAvionDinFisier(fisier);
	//		afisareAvion(a);
	//	}
	//}

	//fclose(fisier);


	NOD* rad = NULL;
	FILE* fisier = fopen("avioane.txt", "r+");
	int nrAvioane = 0;
	if (fisier)
	{
		fscanf(fisier, "%d", &nrAvioane);
		for (int i = 0; i < nrAvioane; i++)
		{
			rad = inserareAvionInArbore(rad, citesteAvionDinFisier(fisier));
		}
	}
	afisareInordine(rad);

	printf("\navionul cu numarul de locuri 30 este: \n");
	cautareAvionInArboreDupaNrLocuri(rad, 30);
	cautareAvionInArboreDupaNrLocuri(rad, 3220);
	 
	fclose(fisier);
}
